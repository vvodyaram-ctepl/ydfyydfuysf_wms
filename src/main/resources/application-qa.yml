server:
   servlet:
      context-path: /wearables_mobile_services
session:
  cookie:
     secure: true

spring:
   main:
      allow-bean-definition-overriding: true
      
################################################## Oracle data source configuration will come from override and sensitive ##################################################
datasource:
  ## Default is false If true, an operation will be performed asynchronously at every connection checkin to verify that the connection is valid
  testConnectionOnCheckin: "false"
  ## If true, an operation will be performed at every connection checkout to verify that the connection is valid. Be sure to set an efficient preferredTestQuery or automaticTestTable if you set this to true.
  testConnectionOnCheckout: "true"
  ## Default: false setting this to true forces Connections to be checked-in synchronously, which under some circumstances may improve performance
  forceSynchronousCheckins: "true"
  ## This is intended to debug applications with Connection leaks default is false
  debugUnreturnedConnectionStackTraces: "true"
  ## initialPoolSize - Default: 3 . Number of Connections a pool will try to acquire upon startup. Should be between minPoolSize and maxPoolSize.
  initialPoolSize: "5"
  ## Minimum number of Connections a pool will maintain at any given time, default is 3
  minPoolSize: "2"
  ## Default: 15,Maximum number of Connections a pool will maintain at any given time.
  maxPoolSize: "5"
  ## c3p0 is very asynchronous. Slow JDBC operations are generally performed by helper threads that don't hold contended locks,default is 3 
  numHelperThreads: "5"
  ## Determines how many connections at a time c3p0 will try to acquire when the pool is exhausted, default is 3
  acquireIncrement: "1"
  ## The size of c3p0's global PreparedStatement cache. If both maxStatements and maxStatementsPerConnection are zero, statement caching will not be enabled. 
  ## If maxStatements is zero but maxStatementsPerConnection is a non-zero value, statement caching will be enabled
  maxStatements: "10"
  ## Seconds a Connection can remain pooled but unused before being discarded. Zero means idle connections never expire, default is 0
  maxIdleTime: "1800"
  ## The number of milliseconds a client calling getConnection() will wait for a Connection to be checked-in or acquired when the pool is exhausted, default is 0
  checkoutTimeout: "60000"
  ##Default: 0, If this is a number greater than 0, c3p0 will test all idle, pooled but unchecked-out connections, every this number of seconds
  idleConnectionTestPeriod: "60"
  ## Number of seconds that Connections in excess of minPoolSize should be permitted to remain idle in the pool before being culled, default is 0
  maxIdleTimeExcessConnections: "0"
  ## user name to connect database
  ###user: hpn_portal_qa
  user: ${DB_USER_NAME}
  ## password to connect database
  password: ${DB_PASSWORD}
  ## schema name to connect
  schema: ${DB_SCHEMA}
  ## Default is null,The JDBC URL of the database from which Connections can and should be acquired.
  jdbcUrl: jdbc:mysql://10.24.208.22:3306/${DB_SCHEMA}?useSSL=true&requireSSL=true&verifyServerCertificate=true&trustCertificateKeyStoreUrl=classpath:dev/truststore&trustCertificateKeyStorePassword=${DB_TRUST_CERT_KEYSTORE_PWD}&clientCertificateKeyStoreUrl=classpath:dev/client-keystore&clientCertificateKeyStorePassword=${DB_CLIENT_CERT_KEYSTORE_PWD}
  ## The fully-qualified class name of the JDBC driverClass that is expected to provide Connections, default is null
  driverClass: com.mysql.cj.jdbc.Driver
  ## The fully qualified class-name of an implememtation of the ConnectionCustomizer interface, which users can implement to set up Connections when they are acquired from the database, or on check-out,
  ## potentially to clean things up on check-in and Connection destruction, default is null
  transactionManager: wearablesTransactionManager
  dataSourceName: dataSource
  sharedCacheMode: javax.persistence.sharedCache.mode
  ## It is the property file where all hibernate properties are defined.
  hibernateProperties: hibernate.properties
  encodingFormat: UTF-8
  ## consumer need to provide the JPA entities package locations to read by the entity manager. It is a list. User can provide the values with "," separated
  packagesToScan: "com.hillspet.wearables"  
################################################# End of oracle data source configuration ##################################################
  
wearables:
  maxPrintableCharLength: 100
  
logging:
  file: //mr_wearables//pet_media//qa//wearables_mobile_qa.log
  pattern:
    console: "%d %-5level %logger : %msg%n"
    file: "%d %-5level [%thread] %logger : %msg%n"
  level:
    org.springframework.web: ERROR
    com.hillspet.wearables: INFO
    org.hibernate: ERROR

sendgrid:
   mailFrom: ${MAIL_FROM}
   apiKey: ${SENDGRID_API_KEY}
    
configuration:
  name: WEARABLES
  properties:
    property:
    - name: log-path
      value: //logs//wearables_mobile_qa.log
    - name: archive
      value: ${log-path}/archive
  appenders:
    Console:
      PatternLayout:
        pattern: '[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n'
      name: Console-Appender
      target: SYSTEM_OUT
    RollingFile:
      DefaultRolloverStrategy:
        max: '30'
      PatternLayout:
        pattern: '[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n'
      Policies:
        SizeBasedTriggeringPolicy:
          size: 1 KB
      fileName: ${log-path}/Wearables_Mobile.log
      filePattern: ${archive}/rollingfile.log.%d{yyyy-MM-dd-hh-mm}.gz
      name: RollingFile-Appender
  loggers:
    logger:
      additivity: 'false'
      appender-ref:
      - level: info
        ref: Console-Appender
      - level: info
        ref: RollingFile-Appender
      level: debug
      name: com.hillspet.wearables
    root:
      appender-ref:
        ref: File-Appender
      level: info
mediaPath: //app

#GCP cloud storage related properties
gcp:
   env: QA
   bucketName: wearables-portal-media
   uploadFolderPath: QA/GCloud/WPortal/
#firebase bucket information
firebase:
   storageBucket: ct-wearables-portal-pf.appspot.com
env: QA
cfauthjsontext: CF_AUTH_JSON_TEXT
prelude_bucket: wearables-ap-prelude

#google timezone search api
googleapikey: ${GOOGLE_API_KEY}